version: '3'

services:
  etcd:
    image: bitnami/etcd:3.4.15
    container_name: etcd
    ports:
      - "3379:2379"
      - "3380:2380"
    environment:
      - ETCD_ENABLE_V2=true
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_NAME=etcd
    volumes:
      - ./components/etcd/data:/bitnami/etcd/data
      - ./components/etcd/logs:/bitnami/etcd/logs
    networks:
      easy-chat:

  redis:
    image: redis:alpine3.18
    ports:
      - 16379:6379
    container_name: redis
    volumes:
      - ./components/redis/data:/data
      - ./components/redis/config/redis.conf:/usr/local/redis/config/redis.conf
    environment:
      TZ: Asia/Shanghai
    restart: always
    networks:
      easy-chat:
    command: redis-server --requirepass easy-chat --appendonly yes

  mysql:
    image: mysql:5.7
    ports:
      - 13306:3306
    container_name: mysql
    volumes:
      - ./components/mysql/data:/var/lib/mysql
      - /etc/localtime:/etc/localtime
    environment:
      MYSQL_ROOT_PASSWORD: 513513
    restart: always
    networks:
      easy-chat:

  mongo:
    image: mongo:4.0
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 513513
    ports:
      - 47017:27017
    volumes:
      - ./components/mongo/data:/data/db
      - /etc/localtime:/etc/localtime
    restart: always
    networks:
      easy-chat:

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    container_name: zookeeper
    volumes:
      - /etc/localtime:/etc/localtime
    environment:
      TZ: Asia/Shanghai
    restart: always
    networks:
      easy-chat:

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: always
    ports:
      - 9092:9092
    environment:
      TZ: Asia/Shanghai
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "ws2ms_chat:8:1,ms2ps_chat:8:1,msg_to_mongo:8:1"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://192.168.182.130:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENERS: INSIDE://:9092
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms256M"
    depends_on:
      - zookeeper
    networks:
      easy-chat:


  apisix-dashboard:
    image: apache/apisix-dashboard:3.0.1-alpine
    container_name: apisix-dashboard
    restart: always
    depends_on:
      - etcd
    volumes:
      - ./components/apisix-dashboard/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
    ports:
      - "9000:9000"
    networks:
      easy-chat:

  apisix:
    image: apache/apisix:3.9.1-debian
    container_name: apisix
    restart: always
    depends_on:
      - etcd
      - apisix-dashboard
    volumes:
      - ./components/apisix/config.yaml:/usr/local/apisix/conf/config.yaml
      - ./components/apisix/logs:/usr/local/apisix/logs
    ports:
      - "9180:9180/tcp"
      - "9080:9080/tcp"
      - "9091:9091/tcp"
      - "9443:9443/tcp"
      - "9093:9092/tcp"
    networks:
      easy-chat:

  sail:
    image: ccr.ccs.tencentyun.com/hyy-yu/sail:latest
    container_name: sail
    ports:
      - "8108:8108"
    volumes:
      - "./components/sail/compose-cfg.toml:/app/cfg.toml"
    restart: always
    platform: linux/arm64
    networks:
      easy-chat:

  jeager:
    image: jaegertracing/all-in-one:latest
    container_name: jeager
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    restart: always
    networks:
      easy-chat:

  elasticsearch:
    image: elasticsearch:7.17.4
    volumes:
      - /etc/localtime:/etc/localtime
      - /components/elasticsearch/data:/usr/share/elasticsearch/data
    environment:
      - cluster.name=elasticsearch
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
    networks:
      easy-chat:

  kibana:
    image: kibana:7.17.4
    restart: always
    volumes:
      - /components/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    links:
      - elasticsearch
    networks:
      easy-chat:

  logstash:
    image: logstash:7.17.4  # 指定使用的Logstash镜像版本
    container_name: logstash  # 容器名称
    restart: always  # 容器重启策略
    volumes:
      - /etc/localtime:/etc/localtime  # 挂载本地时间设置
      - /components/logstash/logs:/usr/share/logstash/logs  # 挂载日志文件路径
      - /tests/mysql-slow.logs:/var/log/mysql-slow.log  # 挂载mysql慢查询日志
      - /components/mysql/data/c9d94e25372b-slow.log:/var/log/mysql-slow.log  # 挂载慢查询日志
      - /components/apixis/logs:/var/log/apixis  # 挂载apixis日志
      - /components/logstash/pipeline:/usr/share/logstash/pipeline  # 挂载pipeline配置
    ports:
      - "5044:5044"  # 映射文件输入端口
      - "50000:50000/tcp"  # 映射TCP端口
      - "50000:50000/udp"  # 映射UDP端口
      - "9600:9600"  # 映射监控端口
    links:
      - elasticsearch  # 连接到Elasticsearch服务
    depends_on:
      - elasticsearch  # 确保在Elasticsearch启动后再启动Logstash
    networks:
      - easy-chat  # 指定网络

  prometheus:
    image: prom/prometheus:v2.28.1  # 指定使用的Prometheus镜像版本
    container_name: prometheus  # 容器名称
    environment:
      TZ: Asia/Shanghai  # 设置时区
    volumes:
      - /components/prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml  # 挂载Prometheus配置文件
      - /components/prometheus/data:/prometheus  # 挂载数据存储路径
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'  # 指定配置文件路径
      - '--storage.tsdb.path=/prometheus'  # 指定存储路径
    restart: always  # 容器重启策略
    user: root  # 以root用户运行
    ports:
      - "9090:9090"  # 映射Prometheus服务端口
    networks:
      - easy-chat  # 指定网络

  grafana:
    image: grafana/grafana  # 指定使用的Grafana镜像
    volumes:
      - /components/grafana/config/datasource.yaml:/etc/grafana/provisioning/datasource.yaml  # 挂载数据源配置文件
      - /components/grafana/data:/var/lib/grafana  # 挂载数据存储路径
    container_name: grafana  # 容器名称
    ports:
      - "3001:3000"  # 映射Grafana服务端口
      - "10007:10007"  # 映射其他端口
    depends_on:
      - prometheus  # 依赖Prometheus服务
    privileged: true  # 以特权模式运行
    user: root  # 以root用户运行
    networks:
      - easy-chat  # 指定网络

networks:
  easy-chat:
    driver: bridge